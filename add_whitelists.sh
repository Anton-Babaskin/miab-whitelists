#!/usr/bin/env bash
set -Eeuo pipefail

# -------------------- CONFIG --------------------
POSTFIX_FILE="/etc/postfix/client_whitelist"            # hash/lmdb map: "value OK"
POSTGREY_FILE="/etc/postgrey/whitelist_clients.local"   # plain list: "domain.tld"
BACKUP_TSTAMP="$(date +%F_%H%M%S)"
# ------------------------------------------------

usage() {
  cat <<EOF
Usage:
  $0 [-n] <domain-or-ip>
  $0 [-n] -f <file_with_entries>

Options:
  -f FILE   –§–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º (–ø–æ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ —Å—Ç—Ä–æ–∫–µ, –ø—É—Å—Ç—ã–µ/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ # –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è)
  -n        –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ (–Ω–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è–µ—Ç)
  -h        –ü–æ–º–æ—â—å

–ü—Ä–∏–º–µ—Ä—ã:
  $0 example.com
  $0 203.0.113.7
  $0 -f whitelists.txt
EOF
  exit 1
}

DRY=0
LIST_FILE=""
while getopts ":f:nh" opt; do
  case "$opt" in
    f) LIST_FILE="$OPTARG" ;;
    n) DRY=1 ;;
    h) usage ;;
    *) usage ;;
  esac
done
shift $((OPTIND-1))

SINGLE_TARGET="${1:-}"

if [[ -z "$SINGLE_TARGET" && -z "$LIST_FILE" ]]; then
  usage
fi

# -------------------- HELPERS --------------------
msg(){ echo -e "$*"; }
die(){ echo -e "‚ùå $*" >&2; exit 1; }

require_root(){
  if [[ $EUID -ne 0 ]]; then
    die "–ù—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root (sudo)."
  fi
}

ensure_file(){
  local path="$1"
  local dir
  dir="$(dirname "$path")"
  if [[ ! -d "$dir" ]]; then
    msg "üìÅ –°–æ–∑–¥–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $dir"
    [[ $DRY -eq 0 ]] && mkdir -p "$dir"
  fi
  if [[ ! -f "$path" ]]; then
    msg "üìù –°–æ–∑–¥–∞—é —Ñ–∞–π–ª: $path"
    [[ $DRY -eq 0 ]] && touch "$path"
    [[ $DRY -eq 0 ]] && chmod 0644 "$path"
  fi
}

backup_if_exists(){
  local path="$1"
  if [[ -f "$path" ]]; then
    msg "üóÇÔ∏è  –ë—ç–∫–∞–ø: ${path}.bak_${BACKUP_TSTAMP}"
    [[ $DRY -eq 0 ]] && cp -a "$path" "${path}.bak_${BACKUP_TSTAMP}"
  else
    msg "‚ÑπÔ∏è  –§–∞–π–ª $path –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –±—ç–∫–∞–ø –Ω–µ –Ω—É–∂–µ–Ω."
  fi
}

is_domain(){
  local s="$1"
  [[ "$s" =~ ^([A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?\.)+[A-Za-z]{2,}$ ]]
}

is_ipv4(){
  local s="$1"
  [[ "$s" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]
}

is_cidr(){
  local s="$1"
  [[ "$s" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$ ]]
}

already_in_file(){
  local needle="$1" file="$2"
  grep -qE "^${needle//./\\.}([[:space:]]|$)" "$file"
}

add_postfix(){
  local v="$1"
  if already_in_file "$v" "$POSTFIX_FILE"; then
    msg "‚ÑπÔ∏è  –£–∂–µ –µ—Å—Ç—å –≤ Postfix: $v"
    return 1
  fi
  msg "‚ûï –î–æ–±–∞–≤–ª—è—é –≤ Postfix: $v OK"
  [[ $DRY -eq 0 ]] && echo "$v OK" >> "$POSTFIX_FILE"
  return 0
}

add_postgrey(){
  local v="$1"
  if already_in_file "$v" "$POSTGREY_FILE"; then
    msg "‚ÑπÔ∏è  –£–∂–µ –µ—Å—Ç—å –≤ Postgrey: $v"
    return 1
  fi
  msg "‚ûï –î–æ–±–∞–≤–ª—è—é –≤ Postgrey: $v"
  [[ $DRY -eq 0 ]] && echo "$v" >> "$POSTGREY_FILE"
  return 0
}
# -------------------------------------------------

require_root
msg "üîß Dry-run: $DRY"

# –ì–æ—Ç–æ–≤–∏–º —Ñ–∞–π–ª—ã (—Å–æ–∑–¥–∞—ë–º –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏)
ensure_file "$POSTFIX_FILE"
ensure_file "$POSTGREY_FILE"

# –ë—ç–∫–∞–ø—ã
backup_if_exists "$POSTFIX_FILE"
backup_if_exists "$POSTGREY_FILE"

CHANGED_POSTFIX=0
CHANGED_POSTGREY=0
ERRORS=0

process_entry(){
  local raw="$1"
  local entry
  entry="$(echo "$raw" | tr '[:upper:]' '[:lower:]' | xargs)"  # trim + lower

  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –º—É—Å–æ—Ä
  [[ -z "$entry" ]] && return 0
  [[ "$entry" =~ ^# ]] && return 0

  if is_cidr "$entry"; then
    # –í–ê–ñ–ù–û: CIDR –≤ hash/texthash –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º.
    msg "‚ö†Ô∏è  CIDR '$entry' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ hash-–∫–∞—Ä—Ç–µ Postfix."
    msg "   –î–æ–±–∞–≤—å —Ç–∞–∫—É—é —Å–µ—Ç—å –≤ CIDR-—Ç–∞–±–ª–∏—Ü—É –∏ –ø–æ–¥–∫–ª—é—á–∏ –µ—ë –≤ main.cf, –Ω–∞–ø—Ä–∏–º–µ—Ä:"
    msg "   check_client_access cidr:/etc/postfix/client_whitelist.cidr"
    msg "   (—Å–∫—Ä–∏–ø—Ç —ç—Ç–æ—Ç CIDR –ø—Ä–æ–ø—É—Å—Ç–∏—Ç)"
    return 0
  elif is_ipv4 "$entry"; then
    add_postfix "$entry" && CHANGED_POSTFIX=1 || true
    # IP –≤ Postgrey –Ω–µ –Ω—É–∂–µ–Ω
  elif is_domain "$entry"; then
    add_postfix "$entry" && CHANGED_POSTFIX=1 || true
    add_postgrey "$entry" && CHANGED_POSTGREY=1 || true
  else
    msg "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å: $entry"
    ERRORS=$((ERRORS+1))
    return 1
  fi
}

if [[ -n "$LIST_FILE" ]]; then
  [[ -f "$LIST_FILE" ]] || die "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LIST_FILE"
  msg "üìö –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–ø–∏—Å–æ–∫: $LIST_FILE"
  while IFS= read -r line || [[ -n "$line" ]]; do
    process_entry "$line" || true
  done < "$LIST_FILE"
else
  process_entry "$SINGLE_TARGET" || true
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
if [[ $DRY -eq 0 ]]; then
  if [[ $CHANGED_POSTFIX -eq 1 ]]; then
    msg "üß∞ postmap $POSTFIX_FILE"
    postmap "$POSTFIX_FILE"
  fi
  if [[ $CHANGED_POSTFIX -eq 1 ]]; then
    msg "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ postfix"
    systemctl restart postfix
  fi
  if [[ $CHANGED_POSTGREY -eq 1 ]]; then
    msg "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ postgrey"
    systemctl restart postgrey || systemctl restart postgrey.service || true
  fi
  msg "‚úÖ –ì–æ—Ç–æ–≤–æ. –ò–∑–º–µ–Ω–µ–Ω–∏—è: Postfix=${CHANGED_POSTFIX}, Postgrey=${CHANGED_POSTGREY}. –û—à–∏–±–æ–∫: ${ERRORS}"
else
  msg "üîé Dry-run –∑–∞–≤–µ—Ä—à—ë–Ω. –ù–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: Postfix=${CHANGED_POSTFIX}, Postgrey=${CHANGED_POSTGREY}. –û—à–∏–±–æ–∫: ${ERRORS}"
fi

# –ü–æ–¥—Å–∫–∞–∑–∫–∞ –Ω–∞ –≤—Å—è–∫–∏–π:
grep -q "client_whitelist" /etc/postfix/main.cf || msg "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –≤ /etc/postfix/main.cf –Ω–µ –≤–∏–¥–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è client_whitelist. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤ smtpd_client_restrictions –µ—Å—Ç—å:
    check_client_access hash:${POSTFIX_FILE}"
